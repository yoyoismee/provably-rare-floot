import type { NextPage } from 'next'
import { useEffect, useState } from 'react'
import axios from 'axios'
import Head from 'next/head'
import Icon from '../components/Icon'
import Floot from '../components/Floot'
import { FlootNFT } from '../Interface/metadata'
import { faShoppingCart } from '@fortawesome/free-solid-svg-icons'
import { useRouter } from 'next/router'

// import { lists } from '../static/flootLists'
// import FlootCard from '../components/FlootCard'

const Barcode = require('react-barcode');

const Home: NextPage = () => {
  const Router = useRouter()
  const [ NFTs, setNFT ] =  useState<FlootNFT[]>([])
  useEffect(() => {
    (async () => {
      const chain = 'rinkeby'
      const flootCollection = '0x7e43465eb6a826329b30eee75f866e89abdad37a'
      const resp = await axios(`/api/fetch?address=${flootCollection}&chain=${chain}`)
      if(resp.status == 200){
        if(resp.data.result.length > 0){
          const lists: FlootNFT[] = resp.data.result
          setNFT(lists)
        }
      }
    })()
  }, []);

  return (
    <div>
      <Head>
        <title>Floot is loot for recipe</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="w-screen flex flex-col items-center justify-center" style={{ height: '84vh' }}>
        <main className="md:w-3/5 w-5/6 flex flex-grow flex-col justify-center">
          <div className="flex-grow"></div>
          <div className="flex justify-between">
            <div className="mb-2 font-bold flex items-center">
              <span className="text-4xl">Floot</span>
              <span className="ml-4 ">
                <Icon fill={faShoppingCart}></Icon>
              </span>
            </div>
            <div className="text-2xl mb-2">
              <a className="underline font-bold">Rarity</a>
            </div>
          </div>
          <span className="w-full h-3 bg-black mb-2"></span>
          <div className="mb-2 text-xl">
            <span className="mb-2">Floot is randomized recipe generated and stored on chain. Ingredients, flavors, and other prefixes are intentionally added for others to interpret in a chef perspective. The more Floot create, the better crypto-chef ecosystems will be.</span>
          </div>
          <span className="w-full h-3 bg-black mb-2"></span>
          <div className="mb-2 text-xl">
            <div className="text-2xl mb-2 font-bold">
              Uses
            </div>
            <span className="mb-2">Floot is an open-source project, feel free to use Floot in more fancy ways.</span>
          </div>
          <button className="mt-16 w-64 p-3 border-black m-auto inline border-4 text-xl font-bold" onClick={() => Router.push('/traits')}>See Traits</button>
          <div className="flex-grow"></div>
        </main>
      </div>

      <div className="w-screen flex flex-col items-center">
        <div className="md:w-3/5 w-5/6 ">
          <h3 className="text-3xl font-bold">Traits</h3>
          <div className="w-full h-3 mt-2 bg-black mb-2"></div>
          <div className="grid xl:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-6">
            { NFTs.map((nft,idx) => <Floot nft={nft} key={idx} />   ) }
            {/* { lists.map(({ price, howTo, ingredient, flootId }, index) => 
              <FlootCard 
                key={index}
                price={price} 
                howTo={howTo}
                ingredient={ingredient}
                flootId={flootId} /> ) } */}
          </div>
        </div>
      </div>
      <footer className="w-screen mt-16 flex flex-col items-center justify-center mb-5" style={{ height: '8vh'}}>  
        <Barcode fontSize={15} height={32} width={1.3} background="#FEF8ED" value="floot.center" />
      </footer>

    </div>
  )
}

export default Home
